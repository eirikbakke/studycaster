00:13 2010-07-16 (updated 15:23 2010-08-10)
Icon was from the Tango Icon Library:
http://tango.freedesktop.org/Tango_Icon_Library

Original screencasting library (no longer used) was from java-remote-control:
http://code.google.com/p/java-remote-control/wiki/UsingTheScreenRecorder

19:02 2010-07-18 (updated 22:49 2010-07-19, 17:40 2010-07-20)
TODO
* Requires Win32 Access
  * Don't capture other windows than Excel when in foreground
  * Strip user names from saved files.
  * Not useful until the above have been implemented
    * Ask for Excel to be closed prior to screencasting (to avoid capturing other Excel documents).
* Requires $$$
  * Add SSL support
  * Sign JAR
* Ask for permission to screencast
* Dump Java console output to log.
* Have a real progress bar.
* Optimize screencast encoding.
* Don't use a temporary directory that contains the user name in its path.
* Store less IP information (e.g. a shorter hash or a separate file).
* Confirm that application does not hang around in Add/Remove programs

Later
* Java screencast.
* Consider real-time screencast uploading.
* Verify timing of videos.
* Find the double-upload bug.
* Sign the JAR.

Done
V Don't reopen; dangerous.
V Have a confirmation dialog if the window is closed before uploading.
V Fix window positioning for all resolutions.

Considered, decided to make no change:
* Add notice about not having to save the document elsewhere.
* Add notice about possibly closed document.

21:37 2010-07-19
* Renewed logging/screencasting functionality
  * One class queues up stderr/stdout output, mouse pointer movements, log entries, and screenshots.
    These can be queued even before the server has been contacted.
  * Another class intercepts stderr/stdout and the default logger, routing things different places.
  * Another class transmits as soon as the server has been contacted.
  * Philosophy: make the logging entirely independent of the rest, don't require proper shutdown.
* Other notes
  * Might need to send keepalive packets

01:44 2010-07-22
http://msdn.microsoft.com/en-us/library/ff468919%28v=VS.85%29.aspx
http://download.oracle.com/docs/cd/E17476_01/javase/1.4.2/docs/guide/jni/spec/functions.html

20:45 2010-07-28
* Don't use the StreamMuxer after all. It has inconvenient semantics. Instead, have one PostOutputStream for the (untimestamped) console output and
  one for the video/mouse pointer stream.

13:57 2010-08-14 New TODO (supercedes previous)
* Start uploading log immediately, though don't wait for this operation to complete before starting
  UI.
* Generalize download, report, and log security
* Store experiment info in XML file
* Include a configured experiment ID in logged info
* Log free disk space if below a certain threshold (due to an error seen once)
* Rearchitect identification mechanism
  * Send a cookie
  * Generate client ticket on server (and rename it)
  * Consider using a separate ticket for identification
  * Figure out how to identify users during the second part of the study
* Send conclusion message to server for logging
* Retry POST uploads, supply file size to append command to make operations idempotent
* Generate human-readable report
* Future
  * Sign the JAR
  * Add SSL support
  * Strip user names from saved files (on client side)
  * Don't use a temporary directory that contains the user name in its path
  * Move as much functionality from native library to Java as possible, make improvements
  * Port window detection library to Mac
  * Investigate Chrome issue with window detection library
  * Improve progress bar
* Absolutely needed for phase two
  * Figure out how to identify users during the second part of the study
  * Make it possible to launch a Java app
  * 
* Strongly preferred for phase two
  * Have a way to let users upload a different file
  * Avoid multiple instances of the screencaster